// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
}

model User {
  id           String         @id @unique @default(uuid())
  name         String
  email        String         @unique
  password     String
  role         UserRole       @default(USER)
  status       UserStatus     @default(ACTIVE)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  userProfile  UserProfile?
  trip         Trip[]
  buddyRequest BuddyRequest[]

  @@map("users")
}

enum TripStatus {
  ACTIVE
  DEACTIVE
}

model Trip {
  id          String     @id @unique @default(uuid())
  userId      String
  destination String
  startDate   String
  endDate     String
  budget      Int
  tripStatus  TripStatus @default(ACTIVE)
  activities  String[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  user         User           @relation(fields: [userId], references: [id])
  BuddyRequest BuddyRequest[]

  @@map("trips")
}

model BuddyRequest {
  id        String        @id @unique @default(uuid())
  tripId    String
  userId    String
  status    RequestStatus
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  user User @relation(fields: [userId], references: [id])
  trip Trip @relation(fields: [tripId], references: [id])

  @@map("buddyRequests")
}

model UserProfile {
  id        String   @id @unique @default(uuid())
  userId    String   @unique
  bio       String
  age       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@map("userProfiles")
}
